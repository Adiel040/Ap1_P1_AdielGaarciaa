@page "/Delete/Articulos/{articulosId:int}"
@page "/Delete/Articulos"
@rendermode InteractiveServer
@inject ArticulosServices articulosService
@inject NavigationManager navigation

<PageTitle>Eliminar art&iacute;culo</PageTitle>

<div class="container">
    <div class="card shadow-header">
        <div class="card-header text-center py-2 rounded">
            <h3><strong>Eliminar Artículo</strong></h3>
        </div>
        <Toasts class="p-3" Messages="MensajeToast" Placement="ToastsPlacement.TopRight" />
        <div class="card-header">
            <h3 class="text-danger">¿Est&aacute;s seguro de que quieres eliminar este Art&iacute;culo?</h3>
        </div>

        @if (articulos != null)
        {
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow-lg">
                            <div class="card-header">
                                <h3 class="text-center"><strong>Datos del Artículo</strong></h3>
                            </div>
                            <div class="card-body">
                                <ul class="list-unstyled">
                                    <li><strong>Art&iacute;culo Id:</strong> @articulos.ArticuloId</li>
                                    <li><strong>Descripci&oacute;n:</strong> @articulos.Descripcion</li>
                                    <li><strong>Costo:</strong> @articulos.Costo</li>
                                    <li><strong>Ganancia:</strong> @articulos.Ganancia</li>
                                    <li><strong>Precio:</strong> @articulos.Precio</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="card-footer d-flex justify-content-between">
            <button type="button" class="btn btn-outline-secondary" @onclick="Volver"><Icon Name="IconName.Arrow90DegLeft" /> Volver</button>
            <button type="button" class="btn btn-outline-danger" @onclick="EliminarArticulo"><Icon Name="IconName.Trash" /> Eliminar</button>
        </div>
    </div>
</div>

@if (articulos == null)
{
    <div>Artículo no encontrado.</div>
}

@code {
    [Parameter]
    public int articulosId { get; set; }
    public Articulos articulos { get; set; } = new Articulos();
    public List<ToastMessage> MensajeToast { get; set; } = new List<ToastMessage>();

    private ToastMessage CreateToastMessage(ToastType toastType, string mensaje)
       => new ToastMessage
           {
               Type = toastType,
               Title = "Notificación",
               HelpText = $"{DateTime.Now}",
               Message = mensaje,
           };

    private void Mensaje(ToastType toastType, string mensaje)
    {
        MensajeToast.Add(CreateToastMessage(toastType, mensaje));
    }

    protected override async Task OnInitializedAsync()
    {
        if (articulosId > 0)
            articulos = await articulosService.Buscar(articulosId);
    }

    public async Task EliminarArticulo()
    {
        var eliminar = await articulosService.Eliminar(articulos.ArticuloId);
        if (eliminar)
        {
            Volver();
            Mensaje(ToastType.Success, "Artículo eliminado correctamente.");
        }
        else
        {
            Mensaje(ToastType.Danger, "El artículo no se pudo eliminar.");
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Index");
    }
}
